[{"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\index.js":"1","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Register.jsx":"2","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\PostModal.jsx":"3","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Header.jsx":"4","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\UserNews.jsx":"5","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\App.jsx":"6","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Login.jsx":"7","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\MenuBar.js":"8","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Modal.jsx":"9","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\reportWebVitals.js":"10","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\UserModal.jsx":"11","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Footer.jsx":"12","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\NewsCard.jsx":"13"},{"size":529,"mtime":1617586083851,"results":"14","hashOfConfig":"15"},{"size":2122,"mtime":1618884775412,"results":"16","hashOfConfig":"15"},{"size":2912,"mtime":1618891366377,"results":"17","hashOfConfig":"15"},{"size":1378,"mtime":1618900658345,"results":"18","hashOfConfig":"15"},{"size":4079,"mtime":1618903205800,"results":"19","hashOfConfig":"15"},{"size":1490,"mtime":1618904134340,"results":"20","hashOfConfig":"15"},{"size":2161,"mtime":1618884225379,"results":"21","hashOfConfig":"15"},{"size":754,"mtime":1618900251567,"results":"22","hashOfConfig":"15"},{"size":414,"mtime":1618891353170,"results":"23","hashOfConfig":"15"},{"size":375,"mtime":1617586083852,"results":"24","hashOfConfig":"15"},{"size":1030,"mtime":1617586083933,"results":"25","hashOfConfig":"15"},{"size":180,"mtime":1617586083941,"results":"26","hashOfConfig":"15"},{"size":617,"mtime":1618900942828,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xxwnpv",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\index.js",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Register.jsx",["58","59"],"import { useState, useContext } from 'react'\r\nimport { UserContext } from '../userContext'\r\nimport { WebContext } from '../webContext'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const Register = () => {\r\n    let history = useHistory();\r\n    const site = useContext(WebContext);\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        'email': '',\r\n        'username': '',\r\n        'password': ''\r\n    })\r\n    const [error, setError] = useState('')\r\n    const {user, setUser} = useContext(UserContext)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        fetch(`${site}api/user/register`, {\r\n            method: 'POST',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify(registerInfo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.error) {\r\n                setError({\r\n                    \"message\": res.error\r\n                })\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"register\">\r\n            <div className=\"container\">\r\n                {error && <p>{error.message}</p>}\r\n                <form className=\"form form--register\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form__input\" id=\"email\" type=\"text\" onChange={(e) => setRegisterInfo({...registerInfo, email: e.target.value})} />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input className=\"form__input\" id=\"username\" type=\"text\" onChange={(e) => setRegisterInfo({...registerInfo, username: e.target.value})} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input className=\"form__input\" id=\"password\" type=\"password\" onChange={(e) => setRegisterInfo({...registerInfo, password: e.target.value})} />\r\n                    <input className=\"btn btn--submit\" type=\"submit\" value=\"Register\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register",["60","61"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\PostModal.jsx",["62","63"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Header.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\UserNews.jsx",["64","65"],"import { useState, useEffect, useContext } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { WebContext } from '../webContext'\r\nimport { UserContext } from '../userContext'\r\nimport MenuBar from '../components/MenuBar'\r\nimport Modal from '../components/Modal'\r\nimport NewsCard from '../components/NewsCard'\r\n\r\nconst UserNews = () => {\r\n    const [news, setNews] = useState([])\r\n    const [filteredNews, setfilteredNews] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [userInfo, setuserInfo] = useState('')\r\n    const [currentModal, setcurrentModal] = useState('')\r\n\r\n    // Pagination\r\n    const [nextPage, setnextPage] = useState('')\r\n    const [prevPage, setprevPage] = useState('')\r\n\r\n    const site = useContext(WebContext)\r\n    const {user, setUser} = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        updateUserNews()\r\n    }, [])\r\n\r\n    const fetchUserNews = async (page) => {\r\n        let res\r\n\r\n        if (page) {\r\n            res = await fetch(`${site}${page}`)\r\n        } else {\r\n            res = await fetch(`${site}api/posts`)\r\n        }\r\n\r\n        const data = await res.json()\r\n        setnextPage(data._links.next)\r\n        setprevPage(data._links.prev)\r\n\r\n        return data.items\r\n    }\r\n\r\n    const updateUserNews = async (page) => {\r\n        const results = await fetchUserNews(page)\r\n        setNews([...results])\r\n        setfilteredNews([...results])\r\n    }\r\n    \r\n    return (\r\n        <div id=\"usernews\">\r\n            <MenuBar \r\n                news={news}\r\n                setfilteredNews={setfilteredNews}\r\n                setnextPage={setnextPage}\r\n                setprevPage={setprevPage}\r\n            />\r\n            <div onClick={() => {setModal(!modal)}} className={`modal-container ${modal ? 'modal-active' : ''}`} ></div>\r\n            <ul className=\"container\">\r\n                {filteredNews.map((item, index) => {\r\n                    return (\r\n                        <NewsCard \r\n                            key={index}\r\n                            item={item}\r\n                            setModal={setModal}\r\n                            setuserInfo={setuserInfo}\r\n                            setcurrentModal={setcurrentModal}\r\n                        />\r\n                    )\r\n                })}\r\n                {!filteredNews.length &&                 \r\n                <div className=\"loading\">\r\n                    <div className=\"loading__circle loading__circle--1\"></div>\r\n                    <div className=\"loading__circle loading__circle--2\"></div>\r\n                    <div className=\"loading__circle loading__circle--3\"></div>\r\n                </div>}\r\n            </ul>\r\n            <div>\r\n\r\n                {prevPage && <button className=\"btn btn--pagination\" onClick={() => updateUserNews(prevPage)}>Prev Page</button>}\r\n                {nextPage && <button className=\"btn btn--pagination\" onClick={() => updateUserNews(nextPage)}>Next Page</button>}\r\n            </div>\r\n                <CSSTransition\r\n                    in={modal}\r\n                    timeout={300}\r\n                    classNames=\"fade\"\r\n                    unmountOnExit\r\n                >\r\n                    {currentModal === 'newPost' \r\n                    ?\r\n                    <Modal \r\n                        modalType=\"newPost\" \r\n                        updateNews={updateUserNews}\r\n                        setModal={setModal}\r\n                        onClose={() => setModal(false)} \r\n                    />\r\n                    :\r\n                    <Modal \r\n                        modalType=\"userInfo\"\r\n                        userId={userInfo} \r\n                        onClose={() => setModal(false)} \r\n                    />\r\n                }\r\n                </CSSTransition>\r\n\r\n            {user.token && \r\n                <button onClick={() => { \r\n                    setModal(true) \r\n                    setcurrentModal('newPost')\r\n                    }}>Add Post\r\n                </button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserNews\r\n","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\App.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Login.jsx",["66"],"import { useState, useContext } from 'react'\r\nimport { WebContext } from '../webContext'\r\nimport { UserContext } from '../userContext'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const site = useContext(WebContext)\r\n    const [loginInfo, setloginInfo] = useState({\r\n        'email': '',\r\n        'password': ''\r\n    })\r\n    const [error, setError] = useState('')\r\n    const {user, setUser} = useContext(UserContext)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let headers = new Headers()\r\n        headers.set('Authorization', 'Basic ' + window.btoa(loginInfo.email + \":\" + loginInfo.password))\r\n\r\n        fetch(`${site}api/tokens`, {\r\n            method: 'POST',\r\n            headers: headers\r\n        })\r\n        .then(res =>  {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res !== undefined) {\r\n                setUser({\r\n                    username: res.username,\r\n                    token: res.token,\r\n                    user_id: res.user_id\r\n                })\r\n                history.push(\"/\")\r\n            }\r\n            else {\r\n                setError({\"message\": \"Invalid username or password\"})\r\n            }\r\n        })        \r\n    }\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <div className=\"container\">\r\n                {error && <p>{error.message}</p>}\r\n                <form className=\"form form--login\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form__input\" type=\"text\" id=\"email\" onChange={(e) => setloginInfo({...loginInfo, email: e.target.value})} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input className=\"form__input\" type=\"password\" htmlFor=\"password\" onChange={(e) => setloginInfo({...loginInfo, password: e.target.value})} />\r\n                    <input className=\"btn btn--submit\" type=\"submit\" value=\"Login\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\MenuBar.js",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Modal.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\reportWebVitals.js",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\UserModal.jsx",["67","68","69"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Footer.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\NewsCard.jsx",["70"],{"ruleId":"71","severity":1,"message":"72","line":15,"column":12,"nodeType":"73","messageId":"74","endLine":15,"endColumn":16},{"ruleId":"71","severity":1,"message":"75","line":15,"column":18,"nodeType":"73","messageId":"74","endLine":15,"endColumn":25},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"75","line":12,"column":18,"nodeType":"73","messageId":"74","endLine":12,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":30,"column":48,"nodeType":"82","messageId":"83","endLine":30,"endColumn":49},{"ruleId":"71","severity":1,"message":"75","line":21,"column":18,"nodeType":"73","messageId":"74","endLine":21,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":25,"column":8,"nodeType":"86","endLine":25,"endColumn":10,"suggestions":"87"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":12,"nodeType":"73","messageId":"74","endLine":14,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":8,"column":12,"nodeType":"73","messageId":"74","endLine":8,"endColumn":16},{"ruleId":"71","severity":1,"message":"75","line":8,"column":18,"nodeType":"73","messageId":"74","endLine":8,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":14,"column":8,"nodeType":"86","endLine":14,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":13,"nodeType":"92","endLine":6,"endColumn":42},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateUserNews'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'getUsersPosts'. Either include it or remove the dependency array.",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [updateUserNews]",{"range":"101","text":"102"},"Update the dependencies array to be: [getUsersPosts]",{"range":"103","text":"104"},[895,897],"[updateUserNews]",[391,393],"[getUsersPosts]"]