[{"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\webContext.js":"1","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Footer.jsx":"2","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\NewsCard.jsx":"3","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Header.jsx":"4","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Register.jsx":"5","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Login.jsx":"6","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Leaderboard.jsx":"7","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\UserNews.jsx":"8","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Modal.jsx":"9","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Message.jsx":"10","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\MenuBar.jsx":"11"},{"size":86,"mtime":1617586083862,"results":"12","hashOfConfig":"13"},{"size":335,"mtime":1622428960797,"results":"14","hashOfConfig":"13"},{"size":3559,"mtime":1622429362596,"results":"15","hashOfConfig":"13"},{"size":1406,"mtime":1622428534141,"results":"16","hashOfConfig":"13"},{"size":4399,"mtime":1622430553517,"results":"17","hashOfConfig":"13"},{"size":2761,"mtime":1622429083549,"results":"18","hashOfConfig":"13"},{"size":1571,"mtime":1622429142724,"results":"19","hashOfConfig":"13"},{"size":5339,"mtime":1622429402159,"results":"20","hashOfConfig":"13"},{"size":442,"mtime":1619064617761,"results":"21","hashOfConfig":"13"},{"size":546,"mtime":1620793244208,"results":"22","hashOfConfig":"13"},{"size":1209,"mtime":1620793244207,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xxwnpv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\webContext.js",[],["50","51"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Footer.jsx",["52","53"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\NewsCard.jsx",["54","55","56"],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Header.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Register.jsx",["57"],"import { useState, useContext } from 'react'\r\nimport { UserContext } from '../userContext'\r\nimport { WebContext } from '../webContext'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { MessageContext } from '../messageContext'\r\nimport Message from '../components/Message'\r\n\r\nexport const Register = () => {\r\n    let history = useHistory();\r\n    const site = useContext(WebContext);\r\n    const {setMessage} = useContext(MessageContext)\r\n    const [imageInfo, setImageInfo] = useState(null)\r\n    const [disableBtn, setdisableBtn] = useState(false)\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        'email': '',\r\n        'username': '',\r\n        'password': '',\r\n        'image_file': ''\r\n    })\r\n    const {user, setUser} = useContext(UserContext)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setdisableBtn(true)\r\n        let data = new FormData()\r\n        let headers = new Headers()\r\n        headers.set('Authorization', 'Basic ' + window.btoa(registerInfo.email + \":\" + registerInfo.password))\r\n        data.append('file', imageInfo)\r\n\r\n        fetch(`${site}api/user/register`, {\r\n            method: 'POST',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify(registerInfo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.error) {\r\n                setMessage({\r\n                    message: res.error,\r\n                    messageType: 'error'\r\n                })\r\n                setdisableBtn(false)\r\n                throw new Error(res.error);\r\n            } \r\n        })\r\n        .then(() => {\r\n            fetch(`${site}api/user/register/image`, {\r\n                method: 'POST',\r\n                body: data\r\n            })\r\n        })\r\n        .then(() => {\r\n            const res = fetch(`${site}api/tokens`, {\r\n                method: 'POST',\r\n                headers: headers\r\n            })\r\n\r\n            return res\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            setUser({\r\n                username: res.username,\r\n                token: res.token,\r\n                user_id: res.user_id\r\n            })\r\n            setMessage({\r\n                message: `Thanks for registering, ${res.username}! Have fun!`,\r\n                messageType: \"success\"\r\n            })\r\n            history.push(\"/\")\r\n        })\r\n        .catch(error => {\r\n            setdisableBtn(false)\r\n            setMessage({\r\n                message: error.toString(),\r\n                messageType: 'error'\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"register\">\r\n            <Message />\r\n            <div className=\"container\">\r\n                <h2 className=\"register__title\">登録</h2>\r\n                <form className=\"form form--register\" onSubmit={handleSubmit}>\r\n                    <div className=\"form__container form__container--1\">\r\n                        <label htmlFor=\"email\">メール</label>\r\n                        <input className=\"form__input\" id=\"email\" type=\"text\" onChange={(e) => setRegisterInfo({...registerInfo, email: e.target.value})} />\r\n                        <label htmlFor=\"username\">ユーザーネーム</label>\r\n                        <input className=\"form__input\" id=\"username\" type=\"text\" onChange={(e) => setRegisterInfo({...registerInfo, username: e.target.value})} />\r\n                        <label htmlFor=\"password\">パスワード</label>\r\n                        <input className=\"form__input\" id=\"password\" type=\"password\" onChange={(e) => setRegisterInfo({...registerInfo, password: e.target.value})} />\r\n                        <input className={'btn btn--submit ' + (disableBtn ? 'btn--disabled' : '')} type=\"submit\" value=\"登録\" />\r\n\r\n                    </div>\r\n                    <div className=\"form__container form__container--2\">\r\n                        <h2 className=\"form-heading--avatar\">アバターを<br />アップロードしよう！</h2>\r\n                        <input type=\"file\" onChange={(e) => {\r\n                            setImageInfo(e.target.files[0])\r\n                            setRegisterInfo({...registerInfo, image_file: e.target.files[0].name})\r\n                            }} />\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\Login.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Leaderboard.jsx",["58","59"],"import React from 'react'\r\nimport { WebContext } from '../webContext'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function Leaderboard() {\r\n    const site = useContext(WebContext)\r\n    const [leaderBoard, setleaderBoard] = useState([])\r\n\r\n    const leaderboard = async () => {\r\n        const data = await fetch(`${site}api/leaderboard`)\r\n        const response = await data.json()\r\n\r\n        return response\r\n    }\r\n\r\n    const updateLeaderboard = (data) => {\r\n        setleaderBoard(data)\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        let data = await leaderboard()\r\n        updateLeaderboard(data.leaderboard_data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"leaderboard\">\r\n            <h2 className=\"leaderboard__title\">投稿ランキング</h2>\r\n            <ul className=\"leaderboard__list\">\r\n            {leaderBoard.map((item, index) => {\r\n                return (\r\n                    <li className=\"leaderboard__item\" key={index}>\r\n                        <p className=\"leaderboard__item--rank\">{index + 1}.</p>\r\n                        <div className=\"leaderboard__item--avatar\">\r\n                            <img src={item.avatar} />\r\n                        </div>\r\n                        <p className=\"leaderboard__item--username\">{item.user}</p>\r\n                        <p className=\"leaderboard__item--count\"> {item.posts_count} posts</p>\r\n                    </li>   \r\n                )\r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\views\\UserNews.jsx",["60"],"import { useState, useEffect, useContext } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { WebContext } from '../webContext'\r\nimport { UserContext } from '../userContext'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport MenuBar from '../components/MenuBar'\r\nimport Leaderboard from '../components/Leaderboard'\r\nimport Message from '../components/Message'\r\nimport Modal from '../components/Modal'\r\nimport NewsCard from '../components/NewsCard'\r\n\r\nconst UserNews = () => {\r\n    const [news, setNews] = useState([])\r\n    const [filteredNews, setfilteredNews] = useState([])\r\n    const [modal, setModal] = useState(false)\r\n    const [userInfo, setuserInfo] = useState({\r\n        userId: '',\r\n        userImg: ''\r\n    })\r\n    const [currentModal, setcurrentModal] = useState('')\r\n\r\n    // Pagination\r\n    const [nextPage, setnextPage] = useState('')\r\n    const [prevPage, setprevPage] = useState('')\r\n\r\n    const site = useContext(WebContext)\r\n    const {user} = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        updateUserNews()\r\n    }, [])\r\n\r\n    const fetchUserNews = async (page) => {\r\n        let res\r\n\r\n        if (page) {\r\n            res = await fetch(`${site}${page}`)\r\n        } else {\r\n            res = await fetch(`${site}api/posts`)\r\n        }\r\n\r\n        const data = await res.json()\r\n        setnextPage(data._links.next)\r\n        setprevPage(data._links.prev)\r\n\r\n        return data.items\r\n    }\r\n\r\n    const updateUserNews = async (page) => {\r\n        const results = await fetchUserNews(page)\r\n        setNews([...results])\r\n        setfilteredNews([...results])\r\n    }\r\n\r\n    const removePostFromList = (id) => {\r\n        let array = [...filteredNews]\r\n\r\n        const item = filteredNews.filter(item => item.id === id)\r\n        const index = filteredNews.indexOf(item[0])\r\n\r\n        if (index > -1) {\r\n            array.splice(index, 1)\r\n            setfilteredNews(array)\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div id=\"usernews\" className=\"usernews\">\r\n            <Message />\r\n            <div onClick={() => {setModal(!modal)}} className={`modal-container ${modal ? 'modal-active' : ''}`} ></div>\r\n            <div className=\"grid-container\">\r\n            <div className=\"menubar\">\r\n                <MenuBar \r\n                    news={news}\r\n                    setfilteredNews={setfilteredNews}\r\n                    setnextPage={setnextPage}\r\n                    setprevPage={setprevPage}\r\n                />\r\n                {user.token && \r\n                    <button onClick={() => { \r\n                        setModal(true) \r\n                        setcurrentModal('newPost')\r\n                        }}\r\n                        className=\"btn btn--add-post\"\r\n                        >投稿する <FontAwesomeIcon style={{ marginLeft: 10, fontSize: 20 }} icon={faPlusCircle}></FontAwesomeIcon>\r\n                    </button>\r\n                }\r\n            </div>\r\n                <ul className=\"container\">\r\n                    {filteredNews.map((item, index) => {\r\n                        return (\r\n                            <NewsCard \r\n                                key={index}\r\n                                item={item}\r\n                                setModal={setModal}\r\n                                setuserInfo={setuserInfo}\r\n                                setcurrentModal={setcurrentModal}\r\n                                removePostFromList={removePostFromList}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Leaderboard />\r\n            </div>\r\n            {!filteredNews.length &&                 \r\n                    <div className=\"loading\">\r\n                        <div className=\"loading__circle loading__circle--1\"></div>\r\n                        <div className=\"loading__circle loading__circle--2\"></div>\r\n                        <div className=\"loading__circle loading__circle--3\"></div>\r\n                    </div>}\r\n            <div className=\"pagination\">\r\n                {prevPage && <button className=\"btn btn--pagination\" onClick={() => updateUserNews(prevPage)}>前のページ</button>}\r\n                {nextPage && <button className=\"btn btn--pagination\" onClick={() => updateUserNews(nextPage)}>次のページ</button>}\r\n            </div>\r\n                <CSSTransition\r\n                    in={modal}\r\n                    timeout={300}\r\n                    classNames=\"fade\"\r\n                    unmountOnExit\r\n                >\r\n                    {currentModal === 'newPost' \r\n                    ?\r\n                    <Modal \r\n                        modalType=\"newPost\" \r\n                        updateNews={updateUserNews}\r\n                        setModal={setModal}\r\n                        onClose={() => setModal(false)} \r\n                    />\r\n                    :\r\n                    <Modal \r\n                        modalType=\"userInfo\"\r\n                        userId={userInfo.userId} \r\n                        userImg={userInfo.userImg}\r\n                        onClose={() => setModal(false)} \r\n                    />\r\n                }\r\n                </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserNews\r\n","C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Modal.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\Message.jsx",[],"C:\\Users\\s-joseph\\Documents\\Testing\\fastapi\\webdev-news-react\\src\\components\\MenuBar.jsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":16,"column":44,"nodeType":"72","messageId":"73","endLine":16,"endColumn":45},{"ruleId":"74","severity":1,"message":"75","line":62,"column":17,"nodeType":"76","endLine":62,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":76,"column":21,"nodeType":"76","endLine":76,"endColumn":55},{"ruleId":"65","severity":1,"message":"77","line":20,"column":12,"nodeType":"67","messageId":"68","endLine":20,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":27,"column":8,"nodeType":"80","endLine":27,"endColumn":10,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"75","line":38,"column":29,"nodeType":"76","endLine":38,"endColumn":54},{"ruleId":"78","severity":1,"message":"82","line":32,"column":8,"nodeType":"80","endLine":32,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faExternalLinkAlt' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'updateUserNews'. Either include it or remove the dependency array.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [fetchData]",{"range":"92","text":"93"},"Update the dependencies array to be: [updateUserNews]",{"range":"94","text":"95"},[718,720],"[fetchData]",[1163,1165],"[updateUserNews]"]